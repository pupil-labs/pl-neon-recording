# obtained from @dom:
# https://github.com/pupil-labs/neon-player/blob/master/pupil_src/shared_modules/imu_timeline/imu_pb2.py

# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: imu.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\timu.proto\x12\x08imuproto\">\n\tAccelData\x12\t\n\x01x\x18\x01 \x01(\x02\x12\t\n\x01y\x18\x02 \x01(\x02\x12\t\n\x01z\x18\x03 \x01(\x02\x12\x10\n\x08reserved\x18\x04 \x01(\x05\"=\n\x08GyroData\x12\t\n\x01x\x18\x01 \x01(\x02\x12\t\n\x01y\x18\x02 \x01(\x02\x12\t\n\x01z\x18\x03 \x01(\x02\x12\x10\n\x08reserved\x18\x04 \x01(\x05\"J\n\nRotVecData\x12\t\n\x01w\x18\x01 \x01(\x02\x12\t\n\x01x\x18\x02 \x01(\x02\x12\t\n\x01y\x18\x03 \x01(\x02\x12\t\n\x01z\x18\x04 \x01(\x02\x12\x10\n\x08reserved\x18\x05 \x01(\x02\"\x91\x01\n\tImuPacket\x12\x0c\n\x04tsNs\x18\x01 \x01(\x04\x12&\n\taccelData\x18\x02 \x01(\x0b\x32\x13.imuproto.AccelData\x12$\n\x08gyroData\x18\x03 \x01(\x0b\x32\x12.imuproto.GyroData\x12(\n\nrotVecData\x18\x04 \x01(\x0b\x32\x14.imuproto.RotVecDatab\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'imu_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  DESCRIPTOR._options = None
  _globals['_ACCELDATA']._serialized_start=23
  _globals['_ACCELDATA']._serialized_end=85
  _globals['_GYRODATA']._serialized_start=87
  _globals['_GYRODATA']._serialized_end=148
  _globals['_ROTVECDATA']._serialized_start=150
  _globals['_ROTVECDATA']._serialized_end=224
  _globals['_IMUPACKET']._serialized_start=227
  _globals['_IMUPACKET']._serialized_end=372
# @@protoc_insertion_point(module_scope)